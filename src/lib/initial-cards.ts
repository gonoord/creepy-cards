
import type { CreepyCard } from '@/types';
import { generateCreepyImage } from '@/ai/flows/generate-creepy-image';

const phrases = [
  "Shadows danced in the corner.",
  "Whispers from an empty room.",
  "The doll's eyes followed you.",
  "Not the wind rattling windows.",
  "Mirror reflection didn't smile.",
  "Footsteps creaked upstairs, no one home.",
  "Phone: 'Unknown Caller' from inside.",
  "Child's laughter from sealed attic.",
  "Scarecrow moved at dusk.",
  "Dust writing: 'I'm watching.'",
  "Portrait's eyes shifted.",
  "A cold spot lingered.",
  "Music box played an unknown song.",
  "Scratching inside the walls.",
  "Path vanished behind you.",
  "A face in the static.",
  "The old swing moved alone.",
  "It breathed on your neck.",
  "The nursery rhyme changed.",
  "Door creaked open, then shut."
];

const imageHints = [
  "eerie forest", "ghostly figure", "haunted mansion", "creepy doll", "dark silhouette",
  "monster shadow", "abstract horror", "spooky landscape", "ominous object", "spectral face",
  "abandoned room", "creepy corridor", "glowing eyes", "mysterious door", "twisted tree"
];

const TOTAL_INITIAL_CARDS = 80;
const UPFRONT_GENERATION_COUNT = 3;

export async function generateInitialCards(): Promise<CreepyCard[]> {
  const cards: CreepyCard[] = [];
  const goosebumpsStyleSuffix = ", in the vibrant, colorful, and spooky art style reminiscent of classic Goosebumps book covers.";
  
  for (let i = 0; i < TOTAL_INITIAL_CARDS; i++) {
    const phrase = phrases[i % phrases.length];
    const cardId = `initial-${i + 1}`;
    const placeholderImageUrl = `https://placehold.co/600x400.png`;
    const placeholderAiHint = imageHints[i % imageHints.length];

    if (i < UPFRONT_GENERATION_COUNT) {
      try {
        const imageResult = await generateCreepyImage({ prompt: phrase + goosebumpsStyleSuffix });
        cards.push({
          id: cardId,
          phrase: phrase,
          imageUrl: imageResult.imageDataUri,
          isAIGenerated: true,
          imageGenerated: true, // Successfully generated
        });
      } catch (error) {
        console.error(`Failed to generate initial image for card "${phrase}":`, error);
        cards.push({
          id: cardId,
          phrase: phrase,
          imageUrl: placeholderImageUrl,
          isAIGenerated: false,
          imageGenerated: true, // Attempted, failed, use placeholder, don't retry this one in batch
          aiHint: placeholderAiHint
        });
      }
    } else {
      // For cards beyond the initial upfront batch, set placeholder and mark for later generation
      cards.push({
        id: cardId,
        phrase: phrase,
        imageUrl: placeholderImageUrl,
        isAIGenerated: false, 
        imageGenerated: false, // Needs to be generated by batch process
        aiHint: placeholderAiHint
      });
    }
  }
  return cards;
}

